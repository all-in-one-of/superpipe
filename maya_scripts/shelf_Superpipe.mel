global proc shelf_Superpipe () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Save the scene by overriding it and put a screenshot into the Superpipe software" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "superpipe_override_save" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "save" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nfrom os import path, listdir, mkdir, remove\nfrom shutil import copyfile\n\ncurrent_file_ext = cmds.file(query = True, expandName = True)\ncurrent_file = current_file_ext.strip(\".ma\")\ndirectory = path.dirname(current_file_ext)\nfile_name = path.basename(current_file)\n\n## SCREENSHOT ##\nfrm = cmds.getAttr(\"defaultRenderGlobals.imageFormat\")\ncmds.setAttr(\"defaultRenderGlobals.imageFormat\", 0)\nif \"edits\" in directory:\n    if not path.isdir(directory + \"/../../images/screenshots\"):\n        mkdir(directory + \"/../../images/screenshots\")\n    cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../../images/screenshots/\" + file_name + \".gif\", v = False, wh = (498, 270), p = 100, orn = False, os = True)\n    cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../../images/screenshots/\" + file_name + \"small.gif\", v = False, wh = (249, 135), p = 100, orn = False, os = True)\nelse:\n    if not path.isdir(directory + \"/../images/screenshots\"):\n        mkdir(directory + \"/../images/screenshots\")\n    cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../images/screenshots/\" + file_name + \".gif\", v = False, wh = (498, 270), p = 100, orn = False, os = True)\n    cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../images/screenshots/\" + file_name + \"_small.gif\", v = False, wh = (249, 135), p = 100, orn = False, os = True)\n\ncmds.setAttr(\"defaultRenderGlobals.imageFormat\", frm)\n\n## SAVE ##\ncmds.file(rename = current_file_ext)\ncmds.file(save = True, type = \"mayaAscii\")\n\n## CREATE REFERENCE ##\nif \"edits\" in directory:\n\tif path.isfile(directory + \"/../reference_\" + file_name + \".ma\"):\n\t\tremove(directory + \"/../reference_\" + file_name + \".ma\")\n\tcopyfile(directory + \"/\" + file_name + \".ma\", directory + \"/../reference_\" + file_name.split(\"_\")[0] + \".ma\")\nelse:\n\tif path.isfile(directory + \"/reference_\" + file_name + \".ma\"):\n\t\tremove(directory + \"/reference_\" + file_name + \".ma\")\n\tcopyfile(directory + \"/\" + file_name + \".ma\", directory + \"/reference_\" + file_name.split(\"_\")[0] + \".ma\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Save the scene by incrementation it and put a screenshot into the Superpipe software" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "superpipe_incremental_save" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "incremental" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nfrom os import path, remove, listdir\nfrom shutil import copyfile\n\nwindow = cmds.window(title = \"SupeRig\", iconName = \"SupeRig\", widthHeight = (200, 400), sizeable = False, resizeToFitChildren = True)\ncmds.columnLayout(adjustableColumn = True)\n\ncmds.scrollField(\"comment_textfield\", wordWrap = True)\ncmds.button(\"start_button\", label = \"Submit\", command = \"submitCommand()\")\ncmds.showWindow(window)\n\ndef submitCommand():\n    comment = cmds.scrollField(\"comment_textfield\", q = True, text = True)\n    incrementalSave(comment)\n    cmds.deleteUI(window, window = True)\n\ndef incrementalSave(comment):\n    current_file_ext = cmds.file(query = True, expandName = True)\n    current_file = current_file_ext.strip(\".ma\")\n    directory = path.dirname(current_file_ext)\n    file_name = path.basename(current_file)\n\n    version = int(file_name[-2:]) + 1\n\n    if \"edits\" in directory:\n        for f in listdir(directory + \"/..\"):\n            if file_name[:-2] in f:\n                current_file_ext = f\n                current_file = current_file_ext.strip(\".ma\")\n                version = int(current_file[-2:]) + 1\n\n    if version < 10:\n        new_file_name = file_name[:-2] + \"0\" + str(version)\n    else:\n        new_file_name = file_name[:-2] + str(version)\n\n    ## COMMENT ##\n    final_comment = file_name + \".ma\\n---\\n\" + comment + \"\\n---\\n\"\n    if \"edits\" in directory:\n        with open(directory + \"/../../data/versions_data.spi\", \"a\") as f:\n            f.write(final_comment)\n    else:\n        with open(directory + \"/../data/versions_data.spi\", \"a\") as f:\n            f.write(final_comment)\n        f.close()\n\n    ## SCREENSHOT ##\n    frm = cmds.getAttr(\"defaultRenderGlobals.imageFormat\")\n    cmds.setAttr(\"defaultRenderGlobals.imageFormat\", 0)\n    if \"edits\" in directory:\n        if not path.isdir(directory + \"/../../images/screenshots\"):\n            mkdir(directory + \"/../../images/screenshots\")\n        cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../../images/screenshots/\" + new_file_name + \".gif\", v = False, wh = (498, 270), p = 100, orn = False, os = True)\n        cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../../images/screenshots/\" + new_file_name + \"_small.gif\", v = False, wh = (249, 135), p = 100, orn = False, os = True)\n    else:\n        if not path.isdir(directory + \"/../images/screenshots\"):\n            mkdir(directory + \"/../images/screenshots\")\n        cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../images/screenshots/\" + new_file_name + \".gif\", v = False, wh = (498, 270), p = 100, orn = False, os = True)\n        cmds.playblast(frame = 1, format = \"image\", cf = directory + \"/../images/screenshots/\" + new_file_name + \"_small.gif\", v = False, wh = (249, 135), p = 100, orn = False, os = True)\n\n    cmds.setAttr(\"defaultRenderGlobals.imageFormat\", frm)\n\n    ## SAVE ##\n    if \"edits\" in directory:\n        cmds.file(rename = directory + \"/../\" + new_file_name + \".ma\")\n        cmds.file(save = True, type = \"mayaAscii\")\n        copyfile(directory + \"/../\" + current_file_ext, directory + \"/\" + current_file_ext)\n        remove(directory + \"/../\" + current_file_ext)\n    else:\n        cmds.file(rename = directory + \"/\" + new_file_name + \".ma\")\n        cmds.file(save = True, type = \"mayaAscii\")\n        copyfile(current_file_ext, directory + \"/edits/\" + file_name + \".ma\")\n        remove(current_file_ext)\n\n    ## CREATE REFERENCE ##\n    if \"edits\" in directory:\n        if path.isfile(directory + \"/../reference_\" + file_name + \".ma\"):\n            remove(directory + \"/../reference_\" + file_name + \".ma\")\n        copyfile(directory + \"/../\" + new_file_name + \".ma\", directory + \"/../reference_\" + file_name.split(\"_\")[0] + \".ma\")\n    else:\n        if path.isfile(directory + \"/reference_\" + file_name + \".ma\"):\n            remove(directory + \"/reference_\" + file_name + \".ma\")\n        copyfile(directory + \"/\" + new_file_name + \".ma\", directory + \"/reference_\" + file_name.split(\"_\")[0] + \".ma\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
